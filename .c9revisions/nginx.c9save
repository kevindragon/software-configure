{"ts":1353044093266,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1353044222018,"patch":[[{"diffs":[[1,"#!/bin/sh\r\n#\r\n# nginx - this script starts and stops the nginx daemon\r\n#\r\n# chkconfig:   - 85 15 \r\n# description:  Nginx is an HTTP(S) server, HTTP(S) reverse \\\r\n#               proxy and IMAP/POP3 proxy server\r\n# processname: nginx\r\n# config:      /etc/nginx/nginx.conf\r\n# config:      /etc/sysconfig/nginx\r\n# pidfile:     /var/run/nginx.pid\r\n \r\n# Source function library.\r\n. /etc/rc.d/init.d/functions\r\n \r\n# Source networking configuration.\r\n. /etc/sysconfig/network\r\n \r\n# Check that networking is up.\r\n[ \"$NETWORKING\" = \"no\" ] && exit 0\r\n \r\nnginx=\"/usr/sbin/nginx\"\r\nprog=$(basename $nginx)\r\n \r\nNGINX_CONF_FILE=\"/etc/nginx/nginx.conf\"\r\n \r\n[ -f /etc/sysconfig/nginx ] && . /etc/sysconfig/nginx\r\n \r\nlockfile=/var/lock/subsys/nginx\r\n \r\nmake_dirs() {\r\n   # make required directories\r\n   user=`$nginx -V 2>&1 | grep \"configure arguments:\" | sed 's/[^*]*--user=\\([^ ]*\\).*/\\1/g' -`\r\n   if [ -z \"`grep $user /etc/passwd`\" ]; then\r\n       useradd -M -s /bin/nologin $user\r\n   fi\r\n   options=`$nginx -V 2>&1 | grep 'configure arguments:'`\r\n   for opt in $options; do\r\n       if [ `echo $opt | grep '.*-temp-path'` ]; then\r\n           value=`echo $opt | cut -d \"=\" -f 2`\r\n           if [ ! -d \"$value\" ]; then\r\n               # echo \"creating\" $value\r\n               mkdir -p $value && chown -R $user $value\r\n           fi\r\n       fi\r\n   done\r\n}\r\n \r\nstart() {\r\n    [ -x $nginx ] || exit 5\r\n    [ -f $NGINX_CONF_FILE ] || exit 6\r\n    make_dirs\r\n    echo -n $\"Starting $prog: \"\r\n    daemon $nginx -c $NGINX_CONF_FILE\r\n    retval=$?\r\n    echo\r\n    [ $retval -eq 0 ] && touch $lockfile\r\n    return $retval\r\n}\r\n \r\nstop() {\r\n    echo -n $\"Stopping $prog: \"\r\n    killproc $prog -QUIT\r\n    retval=$?\r\n    echo\r\n    [ $retval -eq 0 ] && rm -f $lockfile\r\n    return $retval\r\n}\r\n \r\nrestart() {\r\n    configtest || return $?\r\n    stop\r\n    sleep 1\r\n    start\r\n}\r\n \r\nreload() {\r\n    configtest || return $?\r\n    echo -n $\"Reloading $prog: \"\r\n    killproc $nginx -HUP\r\n    RETVAL=$?\r\n    echo\r\n}\r\n \r\nforce_reload() {\r\n    restart\r\n}\r\n \r\nconfigtest() {\r\n  $nginx -t -c $NGINX_CONF_FILE\r\n}\r\n \r\nrh_status() {\r\n    status $prog\r\n}\r\n \r\nrh_status_q() {\r\n    rh_status >/dev/null 2>&1\r\n}\r\n \r\ncase \"$1\" in\r\n    start)\r\n        rh_status_q && exit 0\r\n        $1\r\n        ;;\r\n    stop)\r\n        rh_status_q || exit 0\r\n        $1\r\n        ;;\r\n    restart|configtest)\r\n        $1\r\n        ;;\r\n    reload)\r\n        rh_status_q || exit 7\r\n        $1\r\n        ;;\r\n    force-reload)\r\n        force_reload\r\n        ;;\r\n    status)\r\n        rh_status\r\n        ;;\r\n    condrestart|try-restart)\r\n        rh_status_q || exit 0\r\n            ;;\r\n    *)\r\n        echo $\"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}\"\r\n        exit 2\r\nesac"]],"start1":0,"start2":0,"length1":0,"length2":2738}]],"length":2738,"saved":false}
